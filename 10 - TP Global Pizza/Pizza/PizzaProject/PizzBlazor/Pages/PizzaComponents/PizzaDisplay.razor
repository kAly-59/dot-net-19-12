@using System.Globalization

<div class="row p-2">
    <div class="col-2">
        <img src="@Pizza.ImageLink" style="width:100%" />
    </div>
    <div class="col">
        <h5 class="text-warning text-uppercase font-weight-bold">@Pizza.Name</h5>
        <small class="font-italic">@IngredientsString</small>
    </div>
    <div class="col-2">
        <h5 class="text-primary font-weight-bold">@Pizza.Price.ToString("C2", CultureInfo.CreateSpecificCulture("fr-FR"))</h5>
        <div class="row p-2">
            <button class="col btn btn-success" @onclick="OnClickAddToCart"><i class="bi bi-basket2-fill"></i></button>
            @if (IsAdminMode)
            {
                <button class="col btn text-primary border-primary" @onclick="OnClickEditPizza"><i class="bi bi-pencil-square"></i></button>
                <button class="col btn btn-danger" @onclick="OnClickDeletePizza"><i class="bi bi-trash3"></i></button>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool IsAdminMode { get; set; }
    [Parameter]
    public Pizza Pizza { get; set; }
    [Parameter]
    public EventCallback<Pizza> CallbackAddToCart { get; set; }
    [Parameter]
    public EventCallback<Pizza> CallbackEditPizza { get; set; }
    [Parameter]
    public EventCallback<int> CallbackDeletePizza { get; set; }
    public string IngredientsString => Pizza.Ingredients == null ? "" : string.Join(", ", Pizza.Ingredients!);

    
    public async Task OnClickAddToCart() => await CallbackAddToCart.InvokeAsync(Pizza);
    public async Task OnClickEditPizza() => await CallbackEditPizza.InvokeAsync(Pizza);
    public async Task OnClickDeletePizza() => await CallbackDeletePizza.InvokeAsync(Pizza.Id);
}
